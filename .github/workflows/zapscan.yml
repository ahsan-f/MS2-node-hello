# Node.js CI
name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm run build --if-present
      - run: npm test

  snyk-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the code
      security-events: write # Required to upload SARIF results
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk-results.sarif
      - name: Upload Snyk scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'snyk-results.sarif'

  sonarqube-scan:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for SonarQube analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ahsan-f_MS2-node-hello # Use your project key here
          SONAR_ORGANIZATION: ahsan-f # Use your organization here
      - name: Start Node.js App in Background
        run: npm start &  # Run server in background

      - name: Wait for App to Start
        run: sleep 10  # Give time for server to start

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:3000'  # Your app's URL
          cmd_options: '-r zap-report.html'  # Generate HTML report

      - name: Upload ZAP Report
        if: always()  # Upload even if scan fails
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html
